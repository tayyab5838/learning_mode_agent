[project]
name = "learning-mode-agent"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.16.5",
    "asyncpg>=0.30.0",
    "bcrypt>=5.0.0",
    "fastapi[standard]>=0.118.0",
    "httpx>=0.28.1",
    "openai-agents>=0.3.3",
    "passlib[argon2,bcrypt]>=1.7.4",
    "psycopg2-binary>=2.9.10",
    "pydantic>=2.11.9",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "pytest-sugar>=1.1.1",
    "python-dotenv>=1.1.1",
    "python-jose[cryptography]>=3.5.0",
    "sqlalchemy>=2.0.43",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
    "ruff>=0.1.0",
]


[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["tests"]
asyncio_mode = "auto"
# Use function scope for all async fixtures by default
asyncio_default_fixture_loop_scope = "function"
# Filter out known deprecation warnings
filterwarnings = [
    "ignore::DeprecationWarning:passlib.*",
    "ignore::pydantic.warnings.PydanticDeprecatedSince20",
]

[tool.coverage.run]
source = ["app"]
omit = ["tests/*", "**/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]